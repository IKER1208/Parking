DROP DATABASE IF EXISTS BD_INTEGRADORA_4TO;
CREATE DATABASE IF NOT EXISTS BD_INTEGRADORA_4TO;
USE BD_INTEGRADORA_4TO;

CREATE TABLE IF NOT EXISTS USERS (
    id INT NOT NULL AUTO_INCREMENT,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role ENUM('Admin', 'Client') DEFAULT 'Client',
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS PARKING_LOTS (
    id INT NOT NULL AUTO_INCREMENT,
    user_id INT NOT NULL,
    status TINYINT(1) NOT NULL,
    CONSTRAINT pk_parking_lots PRIMARY KEY (id),
    CONSTRAINT fk_users_parking FOREIGN KEY (user_id) REFERENCES USERS(id)
);

CREATE TABLE IF NOT EXISTS NOTIFICATIONS (
    id INT NOT NULL AUTO_INCREMENT,
    title VARCHAR(100) NOT NULL,
    message VARCHAR(255) NOT NULL,
    parking_lot_id INT NOT NULL,
    CONSTRAINT pk_notifications PRIMARY KEY (id),
    CONSTRAINT fk_notifications_parking_lots FOREIGN KEY (parking_lot_id) REFERENCES PARKING_LOTS(id)
);

CREATE TABLE IF NOT EXISTS SENSORS (
    id INT NOT NULL AUTO_INCREMENT,
    sensor_name VARCHAR(255) NOT NULL,
    sensor_model VARCHAR(255) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT pk_sensors PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS PARKING_SENSORS (
    id INT NOT NULL AUTO_INCREMENT,
    parking_lot_id INT NOT NULL,
    sensor_id INT NOT NULL,
    status VARCHAR(255) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT pk_parking_sensors PRIMARY KEY (id),
    CONSTRAINT fk_parking_sensors_parking_lots FOREIGN KEY (parking_lot_id) REFERENCES PARKING_LOTS(id),
    CONSTRAINT fk_parking_sensors_sensors FOREIGN KEY (sensor_id) REFERENCES SENSORS(id)
);

CREATE TABLE IF NOT EXISTS LOGS (
    id INT NOT NULL AUTO_INCREMENT,
    sensor_id INT NOT NULL,
    log_body VARCHAR(255) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT pk_logs PRIMARY KEY (id),
    CONSTRAINT fk_logs_sensors FOREIGN KEY (sensor_id) REFERENCES SENSORS(id)
);